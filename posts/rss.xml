<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Colzry's Blog</title><link>https://colzry.github.io/posts/</link><description>Recent content in Posts on Colzry's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 16 Jun 2023 16:41:30 +0800</lastBuildDate><atom:link href="https://colzry.github.io/posts/rss.xml" rel="self" type="application/rss+xml"/><item><title>GitHub代理加速</title><link>https://colzry.github.io/posts/git/github%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/git/github%E4%BB%A3%E7%90%86%E5%8A%A0%E9%80%9F/</guid><description>项目地址： https://github.com/hunshcn/gh-proxy 使用cloudflare免费的代理加速 网址： https://workers.cloudflare.com 先登录或注册 将下面的放入左侧的方框中(不需要任何的改动) &amp;#39;use strict&amp;#39; /** * static files (404.html, sw.js, conf.js) */ const ASSET_URL =</description></item><item><title>Git的基本使用</title><link>https://colzry.github.io/posts/git/git%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/git/git%E5%9F%BA%E6%9C%AC%E7%9A%84%E4%BD%BF%E7%94%A8/</guid><description>1. 设置签名 git config --global user.name tom #设置用户名tom git config --global user.email xxx@qq.com #设置用户邮箱 2. 创建本地仓库 $ git init 3. 版本提交 3.1 状态查看 git status #查看工作区、暂存区状态 3.2 添加 git add</description></item><item><title>Git设置代理</title><link>https://colzry.github.io/posts/git/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/git/git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</guid><description># 以下使用http代理 git config --global http.proxy http://127.0.0.1:10809 git config --global https.proxy https://127.0.0.1:10809 # 以下使用socks5代理 git config --global http.proxy socks5://127.0.0.1:10808 git config --global https.proxy socks5://127.0.0.1:10808 # 取消代理 git config --global --unset http.proxy git config --global --unset https.proxy git config --global url.&amp;#34;https://gitpy.colzry.tk/&amp;#34;.insteadOf https:// git config --global --remove-section url.&amp;#34;https://gitpy.colzry.tk/&amp;#34;</description></item><item><title>go mod的使用</title><link>https://colzry.github.io/posts/golang/go-mod/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/golang/go-mod/</guid><description>常用命令 # 初始化模块 cd &amp;lt;mod_name&amp;gt; go mod init &amp;lt;mod_name&amp;gt; # 删除没用的依赖，下载位拉取的依赖 go mod tidy go mod使用 | 全网最详细</description></item><item><title>go workspace快速使用</title><link>https://colzry.github.io/posts/golang/go-workspace/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/golang/go-workspace/</guid><description>常用命令 # 初始化工作区 go work init [dirnames] # 添加模块 go work use [dirnames] 官方博文：Go 1.18工作区模式最佳实践 Go 1.18 workspace 使用初体验_Seekload的博客-CSDN博</description></item><item><title>Golang1.18泛型新特性</title><link>https://colzry.github.io/posts/golang/1.18-%E6%B3%9B%E5%9E%8B%E6%96%B0%E7%89%B9%E6%80%A7/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/golang/1.18-%E6%B3%9B%E5%9E%8B%E6%96%B0%E7%89%B9%E6%80%A7/</guid><description>Go 1.18 泛型全面讲解：一篇讲清泛型的全部</description></item><item><title>Go语言快速上手</title><link>https://colzry.github.io/posts/golang/go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</link><pubDate>Fri, 16 Jun 2023 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/golang/go%E8%AF%AD%E8%A8%80%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8B/</guid><description>在Linux上安装GoLang wget https://golang.google.cn/dl/go1.19.1.linux-amd64.tar.gz rm -rf /usr/local/go &amp;amp;&amp;amp; tar -C /usr/local -xzf go1.19.1.linux-amd64.tar.gz echo &amp;#39;export PATH=$PATH:/usr/local/go/bin&amp;#39; &amp;gt;&amp;gt; $HOME/.profile source $HOME/.profile go version go env -w GO111MODULE=on go env -w GOPROXY=https://goproxy.cn,direct 在Windows上安装GoLang 官网地址 国内镜像地址</description></item><item><title>Containerd安装</title><link>https://colzry.github.io/posts/docker/containerd%E5%AE%89%E8%A3%85/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/containerd%E5%AE%89%E8%A3%85/</guid><description>官方下载地址：https://github.com/containerd/containerd/releases wget https://github.com/containerd/containerd/releases/download/v1.6.8/cri-containerd-cni-1.6.8-linux-amd64.tar.gz mkdir cri-containerd-cni &amp;amp;&amp;amp; tar -zxvf cri-containerd-cni-1.6.8-linux-amd64.tar.gz -C cri-containerd-cni 复制配置</description></item><item><title>Docker换源</title><link>https://colzry.github.io/posts/docker/%E6%8D%A2%E6%BA%90/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/%E6%8D%A2%E6%BA%90/</guid><description>Podman换源 网易 hub-mirror.c.163.com USTC docker.mirrors.ustc.edu.cn vim /etc/containers/registries.conf ################################################ unqualified-search-registries = [&amp;#34;docker.io&amp;#34;] [[registry]] prefix = &amp;#34;docker.io&amp;#34; location = &amp;#34;l6p4ic76.mirror.aliyuncs.com&amp;#34; ################################################# Docker换源 vim /etc/docker/daemon.json { &amp;#34;registry-mirrors&amp;#34;: [&amp;#34;https://l6p4ic76.mirror.aliyuncs.com&amp;#34;], &amp;#34;log-driver&amp;#34;:&amp;#34;json-file&amp;#34;, &amp;#34;log-opts&amp;#34;: {&amp;#34;max-size&amp;#34;:&amp;#34;500m&amp;#34;, &amp;#34;max-file&amp;#34;:&amp;#34;3&amp;#34;} } systemctl restart docker &amp;gt; 南京大学 https://docker.nju.edu.cn/ &amp;gt; 网易 http://hub-mirror.c.163.com &amp;gt; 腾讯云 docker hub mirror https://mirror.ccs.tencentyun.com &amp;gt; doc</description></item><item><title>K8S集群部署</title><link>https://colzry.github.io/posts/docker/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/k8s%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</guid><description>官网地址：https://kubernetes.io/zh-cn/docs/setup/production-environment/too</description></item><item><title>安装Docker</title><link>https://colzry.github.io/posts/docker/%E5%AE%89%E8%A3%85docker/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/%E5%AE%89%E8%A3%85docker/</guid><description>1. 命令行安装 1.1 卸载旧版本 yum remove docker \ docker-client \ docker-client-latest \ docker-common \ docker-latest \ docker-latest-logrotate \ docker-logrotate \ docker-selinux \ docker-engine-selinux \ docker-engine 1.2 安装 执行以下命令安装依赖包： yum install -y yum-utils 鉴于国内网络问题，强烈建议使用国内源</description></item><item><title>使用Docker安装常用环境</title><link>https://colzry.github.io/posts/docker/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E7%8E%AF%E5%A2%83/</link><pubDate>Fri, 16 Jun 2023 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85%E5%B8%B8%E7%94%A8%E7%8E%AF%E5%A2%83/</guid><description>安装Docker $ curl -fsSL get.docker.com -o get-docker.sh $ sudo sh get-docker.sh --mirror Aliyun 卸载 dnf remove -y -q docker-ce docker-ce-cli containerd.io docker-scan-plugin docker-compose-plugin docker-ce-rootless-extras rm -rf 启动 Docker $ sudo systemctl enable docker $ sudo systemctl start docker 建立 docker 用户组 默认情况下，docker 命令会使用</description></item><item><title>树莓派使用Docker安装openwrt作为旁路由(网关服务器)</title><link>https://colzry.github.io/posts/docker/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85openwrt%E4%BD%9C%E4%B8%BA%E6%97%81%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</link><pubDate>Sat, 02 Oct 2021 10:10:26 +0800</pubDate><guid>https://colzry.github.io/posts/docker/%E6%A0%91%E8%8E%93%E6%B4%BE%E4%BD%BF%E7%94%A8docker%E5%AE%89%E8%A3%85openwrt%E4%BD%9C%E4%B8%BA%E6%97%81%E8%B7%AF%E7%94%B1%E7%BD%91%E5%85%B3%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid><description>推荐使用 树莓派爱好基地的arm64无桌面增强版镜像 仓库地址： https://github.com/openfans-community-offical/Debian-Pi-Aarch64/blob/master/README_zh.md 仓库中有详细的说明文档和下载地址 开始安装openwrt容器 树莓派爱好基地的ar</description></item><item><title>初次安装Git的配置</title><link>https://colzry.github.io/posts/git/%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85git%E7%9A%84%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 16 Apr 2021 16:41:30 +0800</pubDate><guid>https://colzry.github.io/posts/git/%E5%88%9D%E6%AC%A1%E5%AE%89%E8%A3%85git%E7%9A%84%E9%85%8D%E7%BD%AE/</guid><description>初次运行 Git 前的配置 Git 自带一个 git config 的工具来帮助设置控制 Git 外观和行为的配置变量。 这些变量存储在三个不同的位置： /etc/gitconfig 文件: 包含系统上每一个用户及他们</description></item></channel></rss>